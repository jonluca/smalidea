<idea-plugin version="2">
    <id>org.jf.smalidea</id>
    <name>Smalidea</name>
    <version>0.06</version>
    <vendor email="jesusfreke@jesusfreke.com" url="http://smali.org">JesusFreke</vendor>

    <description><![CDATA[
      A smali language plugin for IDEA that supports syntax highlighting, debugging, navigation, etc.
    ]]></description>

    <change-notes><![CDATA[]]>
    </change-notes>

    <idea-version since-build="191.4212.41"/>

    <extensions defaultExtensionNs="com.intellij">

        <applicationService serviceInterface="org.jf.smalidea.codeInsight.folding.SmaliCodeFoldingSettings"
                            serviceImplementation="org.jf.smalidea.codeInsight.folding.impl.SmaliCodeFoldingSettingsImpl"/>

        <constantExpressionEvaluator language="smali"
                                     implementationClass="org.jf.smalidea.psi.impl.SmaliPsiExpressionEvaluator"/>

        <fileTypeFactory implementation="org.jf.smalidea.SmaliFileTypeFactory"/>
        <fileType implementationClass="org.jf.smalidea.SmaliFileType" language="smali" extensions="smali"/>

        <syntaxHighlighter key="smali" factoryClass="org.jf.smalidea.highlighter.SmaliHighlighterFactory"/>
        <lang.syntaxHighlighterFactory language="smali"
                                       implementationClass="org.jf.smalidea.highlighter.SmaliHighlighterFactory"/>

        <colorSettingsPage implementation="org.jf.smalidea.SmaliColorsPage"/>

        <lang.parserDefinition language="smali" implementationClass="org.jf.smalidea.SmaliParserDefinition"/>

        <lang.ast.factory language="smali" implementationClass="org.jf.smalidea.SmaliASTFactory"/>

        <java.elementFinder implementation="org.jf.smalidea.psi.index.SmaliClassFinder"/>

        <lang.commenter language="smali" implementationClass="org.jf.smalidea.SmaliCommeter"/>

        <stubIndex implementation="org.jf.smalidea.psi.index.SmaliClassNameIndex"/>
        <stubIndex implementation="org.jf.smalidea.psi.index.SmaliSuperClassNameIndex"/>
        <stubIndex implementation="org.jf.smalidea.psi.index.SmaliFullClassNameIndex"/>

        <codeInsight.lineMarkerProvider language="smali" implementationClass="org.jf.smalidea.codeInsight.daemon.impl.SmaliLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="smali" implementationClass="com.intellij.codeInsight.daemon.impl.RecursiveCallLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="smali" implementationClass="com.intellij.codeInsight.ExternalAnnotationLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="smali" implementationClass="com.intellij.codeInsight.InferredAnnotationsLineMarkerProvider"/>

        <lang.foldingBuilder language="smali" implementationClass="org.jf.smalidea.codeInsight.folding.impl.SmaliFoldingBuilder"/>

        <debugger.positionManagerFactory implementation="org.jf.smalidea.debugging.SmaliPositionManagerFactory"/>

        <debugger.jvmSteppingCommandProvider implementation="org.jf.smalidea.debugging.SmaliSteppingCommandProvider"/>

        <debugger.codeFragmentFactory implementation="org.jf.smalidea.debugging.SmaliCodeFragmentFactory"/>

        <debugger.javaDebugAware implementation="org.jf.smalidea.debugging.SmaliJvmDebugAware"/>

        <debugger.frameExtraVarsProvider implementation="org.jf.smalidea.debugging.SmaliFrameArgumentsProvider"/>

        <debugger.frameExtraVarsProvider implementation="org.jf.smalidea.debugging.SmaliFrameLocalVariableProvider"/>


        <stubElementTypeHolder class="org.jf.smalidea.psi.SmaliElementTypes"/>

        <lang.findUsagesProvider language="smali"
                                 implementationClass="org.jf.smalidea.findUsages.SmaliFindUsagesProvider"/>

        <referencesSearch implementation="org.jf.smalidea.findUsages.SmaliClassReferenceSearcher"/>

        <usageTargetProvider implementation="org.jf.smalidea.findUsages.SmaliUsageTargetProvider"/>

        <usageTypeProvider implementation="org.jf.smalidea.findUsages.SmaliUsageTypeProvider"/>
        <errorHandler implementation="org.jf.smalidea.errorReporting.ErrorReporter"/>
        <todoIndexer filetype="smali" implementationClass="org.jf.smalidea.highlighter.SmaliTodoIndexer"/>

        <!-- The "Smali" (with a capital S) language is the one registered by Android Studio's smali plugin.
             This substitutor ensures that smalidea's "smali" (lowercase s) language is used instead of AS's "Smali"
             language. -->
        <lang.substitutor language="Smali" implementationClass="org.jf.smalidea.SmaliSubstitutor"/>

        <targetElementUtilExtender implementation="org.jf.smalidea.codeInsight.SmaliTargetElementEvaluator"/>
        <targetElementEvaluator language="smali"
                                implementationClass="org.jf.smalidea.codeInsight.SmaliTargetElementEvaluator"/>

        <errorHandler implementation="org.jf.smalidea.errorReporting.ErrorReporter"/>

        <lang.psiStructureViewFactory language="smali"
                                      implementationClass="org.jf.smalidea.structureView.SmaliStructureViewBuilderFactory"/>

        <lang.documentationProvider language="smali"

                                    implementationClass="org.jf.smalidea.documentProvider.SmaliDocumentationProvider"/>
        <typedHandler implementation="org.jf.smalidea.codeInsight.editorActions.SmaliTypedHandler" id="smali"/>


        <psi.referenceContributor language="smali"
                                  implementation="org.jf.smalidea.codeInsight.completion.SimpleReferenceContributor"/>

        <completion.contributor language="smali"
                                implementationClass="org.jf.smalidea.codeInsight.completion.SmaliCompletionContributor"/>

        <completion.contributor language="smali"
                                implementationClass="org.jf.smalidea.codeInsight.completion.SmaliClassNameCompletionContributor"/>

        <!--smali方法实现搜索器-->
        <definitionsScopedSearch implementation="org.jf.smalidea.navigation.SmaliMethodImplementationsSearch"/>

        <!--smali类实现搜索器-->
        <definitionsScopedSearch implementation="org.jf.smalidea.navigation.SmaliClassImplementationsSearch"/>

        <directClassInheritorsSearch implementation="org.jf.smalidea.navigation.SmaliDirectClassImplementationsSearch"/>

        <!--主要用于缓存SubClass-->
        <projectService serviceImplementation="org.jf.smalidea.psi.impl.search.SmaliHighlightingCaches"/>


        <completion.contributor language="smali"
                                implementationClass="org.jf.smalidea.codeInsight.completion.SmaliCompletionContributor"/>
        <completion.contributor language="smali"
                                implementationClass="org.jf.smalidea.codeInsight.completion.SmaliClassNameCompletionContributor"/>

        <intentionAction>
            <className>org.jf.smalidea.codeInsight.daemon.impl.quickfix.integer.ConvertIntegerToHexIntention</className>
            <category>Smali/Numberic</category>
        </intentionAction>

        <intentionAction>
            <className>org.jf.smalidea.codeInsight.daemon.impl.quickfix.integer.ConvertIntegerToDecimalIntention</className>
            <category>Smali/Numberic</category>
        </intentionAction>

        <intentionAction>
        <className>org.jf.smalidea.codeInsight.daemon.impl.quickfix.ConvertToStringLiteralAction</className>
        <category>Smali/Strings</category>
        </intentionAction>


        <intentionAction>
            <className>org.jf.smalidea.codeInsight.daemon.impl.quickfix.unicode.ReplaceOctalEscapeWithUnicodeEscapeIntention</className>
            <category>Smali/I18N</category>
        </intentionAction>

        <intentionAction>
            <className>org.jf.smalidea.codeInsight.daemon.impl.quickfix.unicode.UnicodeUnescapeIntention</className>
            <category>Smali/I18N</category>
        </intentionAction>

        <intentionAction>
            <className>org.jf.smalidea.codeInsight.intention.ConvertToBasicLatinAction</className>
            <category>Smali/I18N</category>
        </intentionAction>
    </extensions>

    <application-components>
    </application-components>

    <project-components>
    </project-components>

    <actions>
    </actions>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>com.intellij.modules.xdebugger</depends>


</idea-plugin>
